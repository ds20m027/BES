##
## @file Makefile
## Betriebsysteme popentest makefile
## Beispiel 2
##
## @author Thomas M. Galla <galla@technikum-wien.at>
## @author Bernd Petrovitsch <bernd.petrovitsch@technikum-wien.at>
## @date 2006/03/18
##
## @version $Revision: 1.1 $
##
## URL: $HeadURL$
##
## Last Modified: $Author: bernd $
##

-include global.mak
-include ../global.mak

##
## ------------------------------------------------------------- variables --
##

PACKAGE := libpopentest

OBJECTS_COMMON := \
	utils.o

OBJECTS_POPENTEST := \
	$(OBJECTS_COMMON) \
	popentest.o

OBJECTS_CHECKOPENFDS := \
	$(OBJECTS_COMMON) \
	checkopenfds.o

OBJECTS_KILLPARENT := \
	$(OBJECTS_COMMON) \
	killparent.o

OBJECTS := \
	$(OBJECTS_POPENTEST) \
	$(OBJECTS_CHECKOPENFDS) \
	$(OBJECTS_KILLPARENT)

ARCHIVE_SOURCES := \
	utils.c \
	utils.h \
	mypopen.h \
	killparent.c \
	checkopenfds.c \
	popentest.c \
	Makefile \
	global.mak \
	doxygen.dcf

SYMLINKS := \
	global.mak \
	mypopen.h \
	utils.c \
	utils.h

GLOBAL_MAK := \
	$(wildcard ../global.mak)

MYPOPEN_H := \
	$(wildcard ../mypopen.h)

UTILS_H := \
	$(wildcard ../utils.h)

UTILS_C := \
	$(wildcard ../utils.c)

ARCHIVES := $(foreach EXT,zip tar.gz,$(PACKAGE).$(EXT))

EXECUTABLES := \
	killparent$(EXESUFFIX) \
	checkopenfds$(EXESUFFIX)

LIBRARIES := \
	$(PACKAGE).a

CFLAGS := $(CFLAGSGNU11) -Wno-deprecated-declarations -Wshadow -D_GNU_SOURCE
#LDFLAGS :=

##
## --------------------------------------------------------------- targets --
##

.PHONY: all
all: symlinks exes libs # html

.PHONY: symlinks
symlinks: $(SYMLINKS)

.PHONY: exes
exes: $(EXECUTABLES)

.PHONY: libs
libs: $(LIBRARIES)

.PHONY: archs
archs: $(ARCHIVES)

killparent$(EXESUFFIX): $(OBJECTS_KILLPARENT)
	$(CC) $(LDFLAGS) -o $@ $^

checkopenfds$(EXESUFFIX): $(OBJECTS_CHECKOPENFDS)
	$(CC) $(LDFLAGS) -o $@ $^

$(PACKAGE).a: $(OBJECTS_POPENTEST)
	$(AR) -rcs $@ $^ 

global.mak: $(GLOBAL_MAK)
	$(LN) $< $@

mypopen.h: $(MYPOPEN_H)
	$(LN) $< $@

utils.c: $(UTILS_C)
	$(LN) $< $@

utils.h: $(UTILS_H)
	$(LN) $< $@

doxygen-data.h: doc/xml/popentest_8c.xml # ../../../bin/recycle-doxygen-docs.pl
	../../../bin/recycle-doxygen-docs.pl < doc/xml/popentest_8c.xml > "$@"

.PHONY: clean
clean:
	$(RM) $(OBJECTS) *~

.PHONY: clobber
clobber: clean
	$(RM) $(EXECUTABLES) $(LIBRARIES) $(ARCHIVES)

.PHONY: distclean
distclean: clobber
	$(RM) -r doc $(SYMLINKS)

.PHONY: doc
doc: html pdf


$(PACKAGE).zip: $(ARCHIVE_SOURCES) doxygen-data.h
	$(CD) .. && $(ZIP) -r $(PACKAGE)/$@ $(foreach src,$^,$(PACKAGE)/$(src))

$(PACKAGE).tar.gz: $(ARCHIVE_SOURCES) doxygen-data.h
	$(CD) .. && $(TAR) --dereference --gzip --create --file $(PACKAGE)/$@ $(foreach src,$^,$(PACKAGE)/$(src))

.PHONY: html
html: doc/html/index.html

doc/html/index.html doc/xml/popentest_8c.xml doc/latex/refman.tex: doxygen.dcf $(filter-out doxygen-data.h,$(wildcard *.c *.h))
	$(DOXYGEN) doxygen.dcf

.PHONY: pdf
pdf: html doc/latex/refman.pdf

doc/latex/refman.pdf: doc/latex/refman.tex
	$(CD) doc/latex; \
	$(MV) refman.tex refman_save.tex; \
	$(GREP) -v $(EXCLUDE_PATTERN) refman_save.tex > refman.tex; \
	$(RM) refman_save.tex; \
	make; \
	$(MV) refman.pdf refman.save; \
	$(RM) *.pdf *.html *.tex *.aux *.sty *.log *.eps *.out *.ind *.idx \
	      *.ilg *.toc *.tps *.ttf Makefile; \
	$(MV) refman.save refman.pdf

.PHONY: install
install: html libs exes archs
	for i in $(LIBRARIES); do $(INSTALL) -D -m 0644 $$i $(INSTALL_LIB_DIR)/$$i; done
	for i in $(EXECUTABLES); do $(INSTALL) -sD $$i $(INSTALL_BIN_DIR)/$$i; done
	for i in $(ARCHIVES); do $(INSTALL) -D -m 0644 $$i $(INSTALL_SRC_DIR)/$$i; done
	$(INSTALL) -dD doc $(INSTALL_DOC_DIR)/doc_popentest
	$(CP) -R doc/html $(INSTALL_DOC_DIR)/doc_popentest

##
## ---------------------------------------------------------- dependencies --
##

killparent.o: killparent.c utils.h Makefile
checkopenfds.o: checkopenfds.c utils.h Makefile
popentest.o : popentest.c utils.h mypopen.h Makefile # doxygen-data.h
utils.o : utils.c utils.h Makefile

##
## =================================================================== eof ==
##
